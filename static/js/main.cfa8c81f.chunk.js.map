{"version":3,"sources":["img/carousel/aaaa-first.jpg","img/carousel/second.jpg","components/shared/navbar.jsx","components/shared/footer.jsx","components/home.jsx","components/zoom.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavbarComponent","useState","expanded","setExpanded","className","Navbar","fixed","bg","expand","exact","to","Brand","Toggle","onClick","aria-controls","Collapse","id","Nav","NavLink","Footer","props","href","target","Home","style","color","Carousel","Item","src","First","alt","Second","Button","variant","App","path","component","Zoom","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,+KC8B5BC,MAtBf,WAA4B,IAAD,EACOC,oBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,KAGzB,OACE,yBAAKC,UAAU,UACb,kBAACC,EAAA,EAAD,CAAQH,SAAUA,EAAUI,MAAQ,MAAMC,GAAG,OAAOC,OAAO,KAAKJ,UAAY,eAC1E,kBAAC,gBAAD,CAAeK,OAAK,EAACC,GAAK,KACtB,kBAACL,EAAA,EAAOM,MAAR,2BAEJ,kBAACN,EAAA,EAAOO,OAAR,CAAeC,QAAS,kBAAMV,GAAYD,GAAmB,aAAaY,gBAAc,qBACxF,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKb,UAAU,WACX,kBAAC,gBAAD,CAAeK,OAAK,EAACC,GAAG,IAAIG,QAAS,kBAAMV,GAAY,KAAQ,kBAACe,EAAA,EAAD,cAC/D,kBAAC,gBAAD,CAAeT,OAAK,EAACC,GAAG,QAAQG,QAAS,kBAAMV,GAAY,KAAQ,kBAACe,EAAA,EAAD,mBCLpEC,MAbf,SAAgBC,GAEd,OACE,yBAAKhB,UAAU,cACb,4BAAQA,UAAW,2CACjB,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,oBAAjB,8BAAiE,uBAAGA,UAAU,OAAOiB,KAAO,oBAAoBC,OAAS,SAAxD,wB,0CC2B5DC,MA5Bf,WACE,OACE,kBAAC,WAAD,CAAUnB,UAAU,QAEhB,gCAAQ,wBAAIoB,MAAS,CAACC,MAAO,YAArB,wGAAiF,6BAEzF,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,KAAV,KACE,yBACEvB,UAAU,gBACVwB,IAAKC,IACLC,IAAI,iBAGR,kBAACJ,EAAA,EAASC,KAAV,KACE,yBACEvB,UAAU,gBACVwB,IAAKG,IACLD,IAAI,qB,gBCYHP,MA/Bf,WACE,OACE,kBAAC,WAAD,CAAUnB,UAAU,QAEhB,gCAAQ,wBAAIoB,MAAS,CAACC,MAAO,YAArB,mCAAyD,6BAEjE,gCACI,kBAAC,cAAD,KACI,kBAACO,EAAA,EAAD,CAAQC,QAAU,YAAYZ,KAAO,uEAArC,uFAKJ,kBAAC,cAAD,KACI,kBAACW,EAAA,EAAD,CAAQC,QAAU,YAAYX,OAAS,QAAQD,KAAO,oCAAtD,iFAKJ,kBAAC,UAAD,KACI,kBAACW,EAAA,EAAD,CAAQC,QAAU,YAAYX,OAAS,QAAQD,KAAO,6CAAtD,uFCODa,MArBf,WACE,OACE,kBAAC,WAAD,CAAU9B,UAAU,OAClB,kBAAC,gBAAD,KAEE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOK,OAAK,EAAC0B,KAAO,IAAIC,UAAab,IACrC,kBAAC,IAAD,CAAOY,KAAO,IAAIC,UAAaC,KAGjC,kBAAC,EAAD,SCfYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cfa8c81f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aaaa-first.789285c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/second.69e3c361.jpg\";","import React from 'react';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavLink from 'react-bootstrap/NavLink';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useState } from 'react';\r\n\r\nfunction NavbarComponent() {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"Navbar\">\r\n      <Navbar expanded={expanded} fixed = \"top\" bg=\"dark\" expand=\"lg\" className = \"navbar-dark\">\r\n        <LinkContainer exact to = \"/\">\r\n            <Navbar.Brand>Balaji Vanapamula</Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle onClick={() => setExpanded(expanded ? false : \"expanded\")} aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                <LinkContainer exact to=\"/\" onClick={() => setExpanded(false)}><NavLink>Home</NavLink></LinkContainer>\r\n                <LinkContainer exact to=\"/zoom\" onClick={() => setExpanded(false)}><NavLink>Zoom</NavLink></LinkContainer>\r\n\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nfunction Footer(props) {\r\n\r\n  return (\r\n    <div className=\"footer-div\">\r\n      <footer className= \"py-4 bg-dark text-white-50 fixed-bottom\">\r\n        <div className=\"container text-center\">\r\n          <small className=\"footer-text-dark\">Copyright &copy; Designed By <a className=\"link\" href = \"https://tinu.tech\" target = \"blank\">Tinu Vanapamula</a></small>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../App.css';\r\nimport {Fragment} from \"react\";\r\n//import {Link} from \"react-router-dom\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport First from \"../img/carousel/aaaa-first.jpg\";\r\nimport Second from \"../img/carousel/second.jpg\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Fragment className=\"Home\">\r\n      \r\n        <center><h1 style = {{color: \"#ffffff\"}}>Balaji Vanapamula (బాలాజీ వనపాముల)</h1></center><br/>\r\n\r\n        <Carousel>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={First}\r\n              alt=\"First slide\"\r\n            />\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              src={Second}\r\n              alt=\"Second slide\"\r\n            />\r\n          </Carousel.Item>\r\n        </Carousel>\r\n\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport {Fragment} from \"react\";\r\n//import {Link} from \"react-router-dom\";\r\nimport {BrowserView, AndroidView, IOSView} from \"react-device-detect\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <Fragment className=\"Home\">\r\n      \r\n        <center><h1 style = {{color: \"#ffffff\"}}>Zoom(జూమ్)</h1></center><br/>\r\n\r\n        <center>\r\n            <AndroidView>\r\n                <Button variant = \"contained\" href = \"https://play.google.com/store/apps/details?id=us.zoom.videomeetings\">\r\n                    Download from Google Play (డౌన్‌లోడ్)\r\n                </Button>\r\n            </AndroidView>\r\n\r\n            <BrowserView>\r\n                <Button variant = \"contained\" target = \"blank\" href = \"https://zoom.us/support/download\">\r\n                    Download for Windows(డౌన్‌లోడ్)\r\n                </Button>\r\n            </BrowserView>\r\n\r\n            <IOSView>\r\n                <Button variant = \"contained\" target = \"blank\" href = \"https://apps.apple.com/us/app/id546505307\">\r\n                    Download from App Store(డౌన్‌లోడ్)\r\n                </Button>\r\n            </IOSView>\r\n        </center>\r\n\r\n\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './App.css';\nimport {Fragment} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\n//Shared\nimport Navbar from \"./components/shared/navbar\";\nimport Footer from \"./components/shared/footer\";\n\n//Components\nimport Home from \"./components/home\";\nimport Zoom from \"./components/zoom\";\n\nfunction App() {\n  return (\n    <Fragment className=\"App\">\n      <Router>\n\n        <Navbar />\n        {/* Page Content routes */}\n        <Switch>\n\n          {/* All of the Different Routes */}\n          <Route exact path = \"/\" component = {Home}/>\n          <Route path = \"/\" component = {Zoom}/>\n\n        </Switch>\n        <Footer />\n        \n      </Router>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}